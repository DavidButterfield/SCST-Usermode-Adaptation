#!/bin/bash

############################################################################
#
# Script for converting the SCST source tree as it exists in the Subversion
# repository to a Linux kernel patch.
#
# Copyright (C) 2008 Bart Van Assche <bart.vanassche@gmail.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, version 2
# of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
############################################################################

########################
# Function definitions #
########################

function usage {
  echo "Usage: $0 [-h] [-m] [-p <dir>] [-q] <kernel version>, where: "
  echo "        -h - show this text"
  echo "        -m - add mpt target driver"
  echo "        -p - generate multiple patches instead of one big patch into"\
       "the specified directory."
  echo "        -q - add qla2x00t driver"
}

# Convert an existing patch.
# $1: path of patch to be added.
# $2: path in kernel tree of file to be patched.
function add_patch {
  if [ ! -e "$1" ]; then
    echo "Error: could not find $1." >&2
    exit 1
  fi

  sed -e "s:^--- [^ ]*:--- orig/linux-${kernel_version}/$2:" \
      -e "s:^+++ [^ ]*:+++ linux-${kernel_version}/$2:"      \
      < "$1"
}

# Generate a patch for a file to be added to the kernel source tree, and strip
# trailing whitespace from C source files while converting the file to patch
# format.
# $1: path of file to be added.
# $2: path in kernel tree where file should be added.
function add_file {
  local a b

  if [ ! -e "$1" ]; then
    echo "Error: could not find $1." >&2
    exit 1
  fi

  # Only include files that were not generated by the build process
  # -- skip *.mod.c.
  if [ "$1" = "${1%.mod.c}" -a "$1" ]; then
    cat <<EOF
diff -uprN orig/linux-${kernel_version}/$2 linux-${kernel_version}/$2
--- orig/linux-${kernel_version}/$2
+++ linux-${kernel_version}/$2
@@ -0,0 +1,$(wc -l "$1" | { read a b; echo $a; }) @@
EOF
    if [ "${2%.[ch]}" != "$2" ]; then
      sed -e 's/sBUG(/BUG(/g' -e 's/sBUG_ON(/BUG_ON(/g' -e 's/^/+/' \
          -e 's/^ \([^ ]*:\)$/\1/' < "$1"
    else
      sed -e 's/sBUG(/BUG(/g' -e 's/sBUG_ON(/BUG_ON(/g' -e 's/^/+/' < "$1"
    fi
  fi
}

function add_empty_file {
  local a b

  cat <<EOF
diff -uprN orig/linux-${kernel_version}/$1 linux-${kernel_version}/$1
--- orig/linux-${kernel_version}/$1
+++ linux-${kernel_version}/$1
@@ -0,0 +1,1 @@
+
EOF
}

# Read a patch from stdin, specialize it for kernel version ${kernel_version}
# and write the output either to stdout or to the file $1 (if not empty),
# depending on the value of the variable ${multiple_patches}.
function process_patch {
  if [ "${multiple_patches}" = "true" ]; then
    if [ -e "${patchdir}/$1" ]; then
      echo "Warning: overwriting ${patchdir}/$1"
    fi
    if [ "$1" != "" ]; then
    (
      echo "Signed-off-by: ${SIGNED_OFF_BY}"
      echo ""
      "$(dirname $0)/specialize-patch" -v kernel_version="${kernel_version}"
    ) >"${patchdir}/$1"
    else
      echo "Skipping ..."
    fi
  else
    "$(dirname $0)/specialize-patch" -v kernel_version="${kernel_version}" 
  fi
}

#########################
# Argument verification #
#########################

qla2x00t="false"
srpt="true"
mpt_scst="false"
multiple_patches="false"
patchdir=""

if [ ! -e scst -o ! -e iscsi-scst -o ! -e srpt -o ! -e scst_local ]; then
  echo "Please run this script from inside the SCST subversion source tree."
  exit 1
fi

set -- $(/usr/bin/getopt hlmp:q "$@")
while [ "$1" != "${1#-}" ]
do
  case "$1" in
    '-h') usage; exit 1;;
    '-l') shift;;
    '-m') mpt_scst="true"; shift;;
    '-p') multiple_patches="true"; patchdir="$2"; shift; shift;;
    '-q') qla2x00t="true"; shift;;
    '--') shift;;
    *)    usage; exit 1;;
  esac
done

if [ $# != 1 ]; then
  usage
  exit 1
fi

if [ "${multiple_patches}" = "" ]; then
  if [ -e "${patchdir}" ]; then
    echo "Patch output directory ${patchdir} already exists."
  fi
  if [ ! -d "${patchdir}" ]; then
    echo "Error: ${patchdir} is not a directory."
  fi
fi


####################
# Patch Generation #
####################

# Strip patch level from the kernel version number.
if [ "${1#[0-9]*.[0-9]*.[0-9]*.[0-9]*}" != "$1" ]; then
  kernel_version="${1%.[0-9]*}"
else
  kernel_version="$1"
fi

if [ "${multiple_patches}" = "false" ]; then
  echo "Signed-off-by: ${SIGNED_OFF_BY}"
  echo ""
fi


# General kernel patches.

process_patch < "scst/kernel/scst_exec_req_fifo-${kernel_version}.patch" \
    "scst_exec_req_fifo.diff"
process_patch < "scst/kernel/export_alloc_io_context-${kernel_version}.patch" \
    "export_alloc_io_context.diff"
process_patch < "iscsi-scst/kernel/patches/put_page_callback-${kernel_version}.patch" \
    "put_page_callback.diff"


# Directory include/scst/

for f in $(ls scst/include/*h)
do
  add_file "${f}" "include/scst/${f#scst/include/}"
done \
| process_patch "scst_public_headers.diff"


# Directory drivers/

(
add_patch "scst/kernel/in-tree/Kconfig.drivers.Linux-${kernel_version}.patch" \
          "drivers/Kconfig"

add_patch "scst/kernel/in-tree/Makefile.drivers.Linux-${kernel_version}.patch"\
          "drivers/Makefile"
) \
| process_patch "misc.diff"


# Directory drivers/scst/

(
add_file "scst/kernel/in-tree/Kconfig.scst"  "drivers/scst/Kconfig"

add_file "scst/kernel/in-tree/Makefile.scst" "drivers/scst/Makefile"

for f in $(ls scst/src/*.[ch])
do
  add_file "${f}" "drivers/scst/${f#scst/src/}"
done
) \
| process_patch "scst_core.diff"

add_file "scst/README_in-tree" "Documentation/scst/README.scst" \
| process_patch "scst_core_doc.diff"



# Directory drivers/scst/dev_handlers/

(
add_file "scst/kernel/in-tree/Makefile.dev_handlers" \
         "drivers/scst/dev_handlers/Makefile" \
| process_patch "dev_handlers_makefile.diff"

for f in $(ls scst/src/dev_handlers/*.[ch])
do
  add_file "${f}" "drivers/scst/dev_handlers/${f#scst/src/dev_handlers/}"
done
) \
| process_patch "scst_dev_handlers.diff"


# Directory drivers/scst/iscsi-scst/

# Make sure the file iscsi-scst/iscsi_scst_itf_ver.h is up to date.
make -s -C iscsi-scst include/iscsi_scst_itf_ver.h

(
for f in $(ls iscsi-scst/include/*h)
do
  add_file "${f}" "include/scst/${f#iscsi-scst/include/}"
done

add_file "iscsi-scst/kernel/Makefile.in-kernel" \
         "drivers/scst/iscsi-scst/Makefile"

add_file "iscsi-scst/kernel/Kconfig"  "drivers/scst/iscsi-scst/Kconfig"

for f in $(ls iscsi-scst/kernel/*.[ch])
do
  add_file "${f}" "drivers/scst/iscsi-scst/${f#iscsi-scst/kernel/}"
done
) \
| process_patch "iscsi-scst.diff"

add_file "iscsi-scst/README_in-tree" "Documentation/scst/README.iscsi" \
| process_patch "iscsi-scst-doc.diff"


# Directory drivers/scst/qla2x00-target/

if [ "${qla2x00t}" = "true" ]; then

  add_file "qla2x00t/qla2x00-target/Makefile_in-tree" \
           "drivers/scst/qla2xxx-target/Makefile"

  add_file "qla2x00t/qla2x00-target/Kconfig" \
           "drivers/scst/qla2xxx-target/Kconfig"

#  add_file "qla2x00t/qla2x_tgt_def.h" \
#           "drivers/scst/qla2x00-target/qla2x_tgt_def.h"

  add_file "qla2x00t/qla2x00-target/README" \
           "Documentation/scst/README.qla2x00t"

  for f in $(ls qla2x00t/qla2x00-target/*.[ch])
  do
    add_file "${f}" "drivers/scst/qla2xxx-target/${f#qla2x00t/qla2x00-target/}"
  done

else

  add_empty_file "drivers/scst/qla2xxx-target/Makefile"

  add_empty_file "drivers/scst/qla2xxx-target/Kconfig"

fi \
| process_patch "qla2x00t.diff"


# Directory drivers/scst/srpt

if [ "$srpt" = "true" ]; then

  add_file  "srpt/src/Kconfig"            "drivers/scst/srpt/Kconfig"

  add_file  "srpt/src/Makefile.in_kernel" "drivers/scst/srpt/Makefile"

  for f in $(ls srpt/src/*.[ch])
  do
    add_file "${f}" "drivers/scst/srpt/${f#srpt/src/}"
  done

else

  add_empty_file "drivers/scst/srpt/Kconfig"

  add_empty_file "drivers/scst/srpt/Makefile"

fi \
| process_patch "srpt.diff"

add_file "srpt/README" "Documentation/scst/README.srpt" \
| process_patch "srpt-doc.diff"


# Directory drivers/message/fusion/mpt_scst

if [ "$mpt_scst" = "true" ]; then

  add_patch "mpt/in-tree/Kconfig-2.6.24.diff" "drivers/message/fusion/Kconfig"

  add_patch "mpt/in-tree/Makefile.diff"       "drivers/message/fusion/Makefile"

  add_file  "mpt/in-tree/Makefile" "drivers/message/fusion/mpt_scst/Makefile"

  add_file  "mpt/in-tree/Kconfig"  "drivers/message/fusion/mpt_scst/Kconfig"

  for f in $(ls mpt/*.[ch])
  do
    add_file "${f}" "drivers/message/fusion/mpt_scst/${f#mpt/}"
  done

#else

#  add_empty_file "drivers/message/fusion/Kconfig"

#  add_empty_file "drivers/message/fusion/Makefile"

fi \
| process_patch "mpt.diff"


# Directory drivers/scst/scst_local

(
  add_file "scst_local/in-tree/Kconfig" "drivers/scst/scst_local/Kconfig"

  add_file "scst_local/in-tree/Makefile" "drivers/scst/scst_local/Makefile"

  add_file "scst_local/scst_local.c" "drivers/scst/scst_local/scst_local.c"
) \
| process_patch "scst_local.diff"

add_file "scst_local/README" "Documentation/scst/README.scst_local" \
| process_patch "scst_local-doc.diff"
