How to set up iSCSI-SCST using scstadmin.

1. Download, build and install iSCSI-SCST.

Download the source code: 

Released version from http://sourceforge.net/project/showfiles.php?group_id=110471

or the latest development version by command:

svn co https://scst.svn.sourceforge.net/svnroot/scst/trunk

You need to patch the kernel and rebuild it. Only vanilla kernels from
kernel.org are officially supported, but in most cases your favorite
kernel will work fine as well. Select the patch according to your kernel
version (2.6.18.1 in the example below):

cd /usr/src/kernels/linux-2.6.18.1
patch -p1 < /home/erezz/work/scst/iscsi-scst/kernel/patches/put_page_callback-2.6.18.1.patch
patch -p1 < /home/erezz/work/scst/scst/kernel/scst_exec_req_fifo-2.6.18.patch
make clean

Then, build the kernel (i.e. make, make modules_install, make install)
and restart the machine.

In order to build and install SCST and iSCSI, run 

make scst scst_install iscsi iscsi_install

ISCSI-SCST includes the following components:
   * /etc/init.d/iscsi-scst - service script
   * iscsi-scstd - daemon
   * iscsi-scst-adm - admin tool (not built in 1.0.0)
   * man pages
   * Configuration files (located under iscsi-scst/etc/, need to be copied to /etc if you want to use them):
      * initiators.allow - used for assigning specific initiators to targets
      * initiators.deny - used for assigning specific initiators to targets
      * iscsi-scstd.conf - list of targets and their properties

2. Set up /etc/iscsi/ininitiatorname.iscsi. The most convenient way to
set up this file is to install the open-iscsi package provided by your
Linux distro first and then to run the bash commands shown below.
Verify the contents of the generated file.
  /etc/init.d/open-iscsi stop
  { echo "InitiatorName=$(/usr/sbin/iscsi-iname)"; echo "InitiatorAlias=$(hostname)"; } >/etc/iscsi/initiatorname.iscsi
  /etc/init.d/open-iscsi start

3. Set up /etc/iscsi-scstd.conf, e.g. by running the following shell commands:
  cat <<EOF >/etc/iscsi-scstd.conf
  Target $(sed -n 's/InitiatorName=//p' /etc/iscsi/initiatorname.iscsi):storage
  EOF

4. Set up /etc/scst.conf. The bash statements shown below set up a
configuration file for two vdisks. Replace the device names in the
array 'disk' by those that apply to your system:
  {
    echo "[HANDLER vdisk]"
    echo "#DEVICE <vdisk name>,<device path>,<options>,<block size>"
    disk=(/dev/md733 /dev/md734)
    for ((i=0;i<${#disk[*]};i++))
    do
      echo "DEVICE vdisk$i,${disk[$i]},NV_CACHE,512"
    done
    echo "[ASSIGNMENT Default]"
    echo "#DEVICE <device name>,<lun>"
    for ((i=0;i<${#disk[*]};i++))
    do
      echo "DEVICE vdisk$i,$i"
    done
  } > /etc/scst.conf

Note, that you must have LUN 0. That's a SCSI requirement (documented in SCST's README).

5. Install scstadmin:
  cd scstadmin-x.y.z
  make install

6. Edit /etc/init.d/scst: remove the modules you do not need from the
SCST_MODULES variable, e.g. qla2x00tgt.

6. Create soft links in /etc/init.d such that SCST starts up
automatically. Use either chkconfig or update-rc.d, depending on the
Linux distribution you are using. An example for Debian systems:
  update-rc.d scst defaults
  update-rc.d iscsi-scst defaults

7. Restart SCST and iSCSI-SCST such that the new settings become effective:
  /etc/init.d/iscsi-scst stop
  /etc/init.d/scst stop
  /etc/init.d/scst start
  /etc/init.d/iscsi-scst start


How to install and use iSCSI-SCST without using scstadmin

First, start scst_disk: modprobe scst_disk

/etc/init.d/iscsi-scst can be used to start/stop/restart/check status.

Selecting devices to be used by SCST.

You can see the list of available devices:

# cat /proc/scsi_tgt/scsi_tgt
Device (host:ch:id:lun or name)                             Device handler
0:0:0:0                                                     dev_disk
1:0:0:0                                                     dev_disk
3:0:0:0                                                     dev_disk
3:0:0:1                                                     dev_disk
3:0:0:2                                                     dev_disk
3:0:0:3                                                     dev_disk
3:0:0:4                                                     dev_disk
3:0:0:5                                                     dev_disk
3:0:0:6                                                     dev_disk
3:0:0:7                                                     dev_disk
2:0:0:0                                                     none
4:0:0:0                                                     none
4:0:0:5                                                     dev_disk
4:0:0:6                                                     dev_disk
4:0:0:7                                                     dev_disk
4:0:0:8                                                     dev_disk
4:0:0:9                                                     dev_disk
4:0:1:0                                                     dev_disk
4:0:1:1                                                     dev_disk
4:0:1:2                                                     dev_disk
4:0:1:3                                                     dev_disk
4:0:1:4                                                     dev_disk
5:0:0:0                                                     none
5:0:0:5                                                     dev_disk
5:0:0:6                                                     dev_disk
5:0:0:7                                                     dev_disk
5:0:0:8                                                     dev_disk
5:0:0:9                                                     dev_disk
5:0:1:0                                                     dev_disk
5:0:1:1                                                     dev_disk
5:0:1:2                                                     dev_disk
5:0:1:3                                                     dev_disk
5:0:1:4                                                     dev_disk

LUN masking.

SCST defines security groups. For each group, you can add LUNs. 

If you want to have all LUNs available for all targets, just add them to
the "Default" group:

# echo "add 5:0:0:8 0" >/proc/scsi_tgt/groups/Default/devices
# cat /proc/scsi_tgt/groups/Default/devices
Device (host:ch:id:lun or name)                             Virtual lun  Options
5:0:0:8                                                        0

Now, the LUN "5:0:0:8" was added to the "Default" group as LUN #0.

Note, that you must have LUN 0. That's a SCSI requirement (documented in SCST's README).

Defining LUN masking

In order to associate specific LUNs with specific targets, do the following:

   * Create a group for the target:

echo "add_group Default_iqn.2007-05.com.example:storage.iscsi-scst-1" >/proc/scsi_tgt/scsi_tgt

   * Add LUNs to the group:

echo "add 4:0:0:8 0" > /proc/scsi_tgt/groups/Default_iqn.2007-05.com.example\:storage.iscsi-scst-1/devices

This will assign the LUN "4:0:0:8" to the target iqn.2007-05.com.example:storage.iscsi-scst-1.
Again, you must have LUN 0 for each group.

Deleting a LUN from a group

Run the following command:

echo "del 4:0:0:8 0" > /proc/scsi_tgt/groups/Default_iqn.2007-05.com.example\:storage.iscsi-scst-1/devices

This will remove the LUN "4:0:0:8" from the target iqn.2007-05.com.example:storage.iscsi-scst-1.

Deleting a group.

Run the following command:

echo "del_group Default_iqn.2007-05.com.example:storage.iscsi-scst-1" >/proc/scsi_tgt/scsi_tgt

For more information about LUN masking, refer to SCST README, section
"Access and devices visibility management (LUN masking)".

Creating targets using iscsi-scstd.conf.

The easiest way to create targets is to define them in
/etc/iscsi-scstd.conf. An example can be found in etc/iscsi-scstd.conf.
You need to have this file under /etc/ before starting iSCSI-SCST.

Assigning targets to specific initiators

In order to assign targets to specific initiators, you need to have
/etc/initiators.allow  and /etc/initiators.deny. You can find
example files in etc/initiators.allow and etc/initiators.deny.

Note that all targets are allowed to all initiators by default, so if
you want to use /etc/initiators.allow, you will need to have
/etc/initiators.deny that looks like this:

ALL ALL

This will deny all initiators expect for those defined in /etc/initiators.allow.

Useful examples of iscsi-scst-adm:

Show a specific target:

# iscsi-scst-adm --op show --tid=1
QueuedCommands=0

Show the configured parameters for a specific target:

# iscsi-scst-adm --op show --tid=1 --sid=0
InitialR2T=No
ImmediateData=
MaxConnections=0
MaxRecvDataSegmentLength=4269849632
MaxXmitDataSegmentLength=10933
MaxBurstLength=4294967295
FirstBurstLength=32767
DefaultTime2Wait=4203042
DefaultTime2Retain=5
MaxOutstandingR2T=0
DataPDUInOrder=No
DataSequenceInOrder=Yes
ErrorRecoveryLevel=0
HeaderDigest=
DataDigest=CRC32C
OFMarker=
IFMarker=No
OFMarkInt=Reject
IFMarkInt=Reject


Bart Van Assche
Erez Zilber
Vladislav Bolkhovitin
