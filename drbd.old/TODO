Porting DRBD to usermode

I read some of the DRBD (Distributed Replicated Block Device) documentation and downloaded the
source.  I compiled the kernel modules and examined the undefined symbols to determine what
kernel functions DRBD depends on.

That's similar to what I did when porting SCST.  "UMC" refers to "usermode compatibility", the
kernel functions and functionality I reimplemented in usermode to port SCST to usermode.

Below is a list of DRBD undefined symbols, orgnized by class of work it would take to
reimplement in usermode.

It looks quite plausible.  There are some things to implement, but mostly straightforward.  The
main design work will be to decide how to interface DRBD to the other usermode pieces.  In the
kernel that is done through the functions in the "Block I/O Interfaces" section below.

I think I already understand how to plumb it into SCST, if we should decide to go that way.
(SCST seems more attractive after you mentioned the Intel implementation is missing advanced
functionality).

Classes of work below:
    BLOCK I/O INTERFACES to be written or stolen from genhd.c
    STRAIGHTFORWARD implementation of well-defined functions
    UPDATE EXISTING UMC functionality areas with additional interfaces (straightforward)
    STUB OUT functions that we don't need right away or maybe at all
    STANDARD FUNCTIONS FROM LIBRARY we will get from the library
    FUNCTIONS USED BY DRBD AND ALREADY IMPLEMENTED IN EXISTING UMC
    FUNCTIONS IN EXISTING UMC BUT NOT USED BY DRBD

===== BLOCK I/O INTERFACES =====

__alloc_disk_node
del_gendisk
device_add_disk
set_disk_ro
put_disk

bdevname
bdget
bd_link_disk_holder
bdput
bd_unlink_disk_holder
fsync_bdev

blkdev_get_by_path
blkdev_issue_discard
blkdev_issue_write_same
blkdev_issue_zeroout
blkdev_put
register_blkdev
unregister_blkdev

blk_alloc_queue
blk_check_plugged
blk_cleanup_queue
blk_finish_plug
blk_queue_logical_block_size
blk_queue_make_request
blk_queue_max_discard_sectors
blk_queue_max_hw_sectors
blk_queue_max_write_same_sectors
blk_queue_segment_boundary
blk_queue_split
blk_queue_stack_limits
blk_queue_write_cache
blk_set_stacking_limits
blk_start_plug
blk_status_to_errno
errno_to_blk_status
generic_end_io_acct
generic_make_request
generic_start_io_acct

bio_add_page
bio_alloc_bioset
bio_clone_fast
bio_endio
bio_put
bioset_create
bioset_free
fs_bio_set

===== STRAIGHTFORWARD =====

rb_erase
rb_insert_color
rb_next

radix_tree_delete_item
radix_tree_lookup
radix_tree_tagged

idr_alloc_cmn
idr_destroy
idr_get_next

param_get_uint
param_ops_bool
param_ops_int
param_ops_string
param_ops_uint

nla_find
nla_memcpy
nla_parse
nla_put
nla_put_64bit
nla_put_nohdr
nla_reserve
nla_strlcpy

flush_signals
force_sig

get_random_bytes
prandom_u32

call_usermodehelper

capable

call_rcu_sched
synchronize_sched
    see if there's an RCU impl already for usermode

===== UPDATE EXISTING UMC =====

netlink_broadcast
netlink_unicast
kobject_uevent
genlmsg_put
genl_register_family
genl_unregister_family

ex_handler_refcount

init_net
__ipv6_addr_type

__alloc_skb
kfree_skb
skb_trim

sock_create_kern
sock_release
kernel_setsockopt
kernel_sock_shutdown
kernel_accept
kernel_recvmsg

find_first_bit
find_first_zero_bit
find_next_zero_bit
__bitmap_and
__bitmap_equal
__sw_hweight32
__sw_hweight64

__kmalloc
__vmalloc
kmalloc_caches
kmem_cache_alloc_trace
kmem_cache_size
memzero_explicit
kvfree
alloc_pages_current
mempool_alloc_pages
mempool_free_pages

free_pages
__get_free_pages
__put_page
put_zone_device_private_or_public_page

_raw_spin_lock
_raw_spin_lock_bh
_raw_spin_lock_irq
_raw_spin_lock_irqsave
_raw_spin_unlock_bh
_raw_spin_unlock_irqrestore
_raw_write_lock_bh
_raw_write_unlock_bh
down
down_read
down_trylock
down_write
up
up_read
up_write
__mutex_init

ktime_get
ktime_get_with_offset
ns_to_timespec64
time64_to_tm
sys_tz
jiffies_to_msecs

del_timer
init_timer_key
mod_timer_pending

cpumask_next
__cpu_online_mask
__cpu_possible_mask
__per_cpu_offset
zalloc_cpumask_var

kthread_create_on_node
current_task
__get_task_comm

prepare_to_wait
prepare_to_wait_event
__wake_up

finish_wait
init_wait_entry
__init_waitqueue_head

__alloc_workqueue_key
queue_work_on
system_wq

_cond_resched
schedule
schedule_timeout
schedule_timeout_interruptible
schedule_timeout_uninterruptible

fortify_panic

seq_putc
seq_puts

___ratelimit
vsnprintf
__warn_printk
__dynamic_pr_debug

===== STUB OUT =====
device_private_key

crypto_ahash_final
crypto_alloc_ahash
crypto_alloc_shash
crypto_destroy_tfm
crypto_shash_digest
crypto_shash_setkey

pv_irq_ops
pv_lock_ops

__request_module

__fentry__

autoremove_wake_function

vmemmap_base
page_offset_base
__default_kernel_pte_mask

sme_me_mask

sched_setscheduler

debugfs_create_dir
debugfs_create_file
debugfs_create_symlink
debugfs_remove

===== STANDARD FUNCTIONS FROM LIBRARY =====

snprintf
sprintf
memcmp
memcpy
memset
strchr
strcmp
strcpy
strlen
strstr

__stack_chk_fail

__x86_indirect_thunk_r10
__x86_indirect_thunk_r13
__x86_indirect_thunk_r14
__x86_indirect_thunk_r15
__x86_indirect_thunk_rax
__x86_indirect_thunk_rbx
__x86_indirect_thunk_rcx
__x86_indirect_thunk_rdx
__x86_indirect_thunk_rsi

===== FUNCTIONS USED BY DRBD AND ALREADY IMPLEMENTED IN EXISTING UMC =====

add_timer
__bitmap_parse
complete
copy_page
crc32c
del_timer_sync
destroy_workqueue
find_next_bit
flush_workqueue
free_cpumask_var
__free_pages
jiffies
kasprintf
kernel_sendmsg
kfree
kmem_cache_alloc
kmem_cache_create
kmem_cache_destroy
kmem_cache_free
kstrdup
kstrtoull
kvasprintf
mempool_alloc
mempool_alloc_slab
mempool_create
mempool_destroy
mempool_free
mempool_free_slab
mod_timer
module_put
mutex_lock
mutex_lock_interruptible
mutex_trylock
mutex_unlock
nr_cpu_ids
panic
printk
proc_create_data
remove_proc_entry
scnprintf
seq_lseek
seq_printf
seq_read
set_cpus_allowed_ptr
sg_init_table
single_open
single_release
submit_bio
try_module_get
vscnprintf
wait_for_completion
wake_up_process

===== FUNCTIONS IN EXISTING UMC BUT NOT USED BY DRBD =====
      (For information -- not directly relevant to DRBD)

ACCESS_ONCE
_add_timer
__aligned
alloc_cpumask_var
BUG
cancel_delayed_work_sync
cancel_work_sync
clear_page
complete_all
copy_from_user
copy_to_user
cpumask_bits
cpumask_clear
cpumask_copy
cpumask_equal
cpumask_scnprintf
cpumask_setall
cpumask_set_cpu
DEFAULT_RATELIMIT_INTERVAL 
DEFINE_RATELIMIT_STATE
FATAL
flush_scheduled_work
flush_work
for_each_cpu
for_each_sg
__free_page
free_page
get_unaligned_be16
get_unaligned_be32
get_unaligned_be64
get_user_pages
get_user_pages_backport
hex2bin
hex_to_bin
ib_alloc_pd
ib_pd *ib_alloc_pd_backport
in_interrupt
in_irq
init_timer
inode *file_inode
in_serving_softirq
int cpumask_check
int cpumask_next
int no_printk
int queue_max_hw_sectors
irqthread_alloc
irqthread_run
__is_kfree_rcu_offset
jiffies_of_sys_time
jiffies_to_sys_time
kfree_call_rcu
__kfree_rcu
kfree_rcu
kmalloc_array
KMEM_CACHE
kmem_cache_alloc_node
kmemdup
kref_get_unless_zero
kstrtol
kstrtoll
kstrtoul
kthread_create
kthread_run
ktime_before
list_entry_in_list
__list_for_each
lockdep_assert_held
mempool_create_kmalloc_pool
_mutex_lock
_mutex_trylock
nr_cpumask_bits
page *sg_page
pr_alert
pr_cont
pr_crit
pr_debug
pr_emerg
pr_err
pr_fmt
pr_info
__printf
pr_notice
pr_warn
pr_warning
put_unaligned
put_unaligned_be16
put_unaligned_be32
put_unaligned_be64
__ratelimit
READ_ONCE
scatterlist *sg_chain_ptr
schedule_delayed_work
schedule_work
scsi_bidi_cmnd
setup_timer
sg_assign_page
sg_init_one
sg_is_chain
sg_is_last
sg_mark_end
sg_set_page
*sg_virt
smp_mb__after_atomic_dec
smp_mb__after_atomic_inc
smp_mb__after_clear_bit
smp_mb__before_atomic_dec
swap
tasklet_schedule
UMC_sock_shutdown
vfs_fsync
vfs_fsync_backport
vfs_readv
vfs_readv_backport
vfs_writev
vfs_writev_backport
vprintk
vstrdup
vzalloc
wait_event_interruptible
wait_event_interruptible_timeout
wait_for_completion_timeout
wake_up
wake_up_all
wake_up_one
_wake_up_process
write_downgrade
